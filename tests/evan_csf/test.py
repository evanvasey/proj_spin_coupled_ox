import numpy as np
from Hamiltonian import full_H



#grp
grp_dets = [[1.0, 1, 1, 0, 0, 1, 1, 0, 0], [1.0, 1, 1, 0, 0, 1, 0, 1, 0], [1.0, 1, 1, 0, 0, 0, 1, 0, 1], [1.0, 1, 1, 0, 0, 0, 0, 1, 1], [1.0, 1, 0, 1, 0, 1, 1, 0, 0], [1.0, 1, 0, 1, 0, 1, 0, 1, 0], [1.0, 1, 0, 1, 0, 0, 0, 1, 1], [1.0, 0, 1, 0, 1, 1, 1, 0, 0], [1.0, 0, 1, 0, 1, 0, 1, 0, 1], [1.0, 0, 1, 0, 1, 0, 0, 1, 1], [1.0, 0, 0, 1, 1, 1, 1, 0, 0], [1.0, 0, 0, 1, 1, 1, 0, 1, 0], [1.0, 0, 0, 1, 1, 0, 1, 0, 1], [1.0, 0, 0, 1, 1, 0, 0, 1, 1], [1.0, 1, 0, 1, 0, 1, 0, 0, 1], [1.0, 1, 0, 1, 0, 0, 1, 1, 0], [1.0, 1, 0, 0, 1, 1, 0, 1, 0], [1.0, 1, 0, 0, 1, 1, 0, 0, 1], [1.0, 1, 0, 0, 1, 0, 1, 1, 0], [1.0, 1, 0, 0, 1, 0, 1, 0, 1], [1.0, 0, 1, 1, 0, 1, 0, 1, 0], [1.0, 0, 1, 1, 0, 1, 0, 0, 1], [1.0, 0, 1, 1, 0, 0, 1, 1, 0], [1.0, 0, 1, 1, 0, 0, 1, 0, 1], [1.0, 0, 1, 0, 1, 1, 0, 0, 1], [1.0, 0, 1, 0, 1, 0, 1, 1, 0]] 

grp_coeffs = [np.float64(0.17677669529663706), np.float64(0.17677669529663692), np.float64(-0.17677669529663703), np.float64(-0.17677669529663684), np.float64(0.17677669529663692), np.float64(0.35355339059327356), np.float64(-0.1767766952966367), np.float64(-0.17677669529663703), np.float64(0.3535533905932739), np.float64(0.1767766952966368), np.float64(-0.17677669529663684), np.float64(-0.1767766952966367), np.float64(0.1767766952966368), np.float64(0.17677669529663664), np.float64(0.17677669529663698), np.float64(0.17677669529663673), np.float64(0.17677669529663698), np.float64(0.17677669529663712), np.float64(0.17677669529663692), np.float64(0.17677669529663706), np.float64(0.17677669529663673), np.float64(0.17677669529663692), np.float64(0.17677669529663664), np.float64(0.17677669529663678), np.float64(0.17677669529663703), np.float64(0.17677669529663678)] 


#rhf only 
rhf_dets  =[[1.0, 1, 1, 0, 0, 1, 1, 0, 0], [1.0, 1, 1, 0, 0, 1, 0, 1, 0], [1.0, 1, 1, 0, 0, 0, 1, 0, 1], [1.0, 1, 1, 0, 0, 0, 0, 1, 1], [1.0, 1, 0, 1, 0, 1, 1, 0, 0], [1.0, 1, 0, 1, 0, 0, 1, 0, 1], [1.0, 1, 0, 1, 0, 0, 0, 1, 1], [1.0, 0, 1, 0, 1, 1, 1, 0, 0], [1.0, 0, 1, 0, 1, 1, 0, 1, 0], [1.0, 0, 1, 0, 1, 0, 0, 1, 1], [1.0, 0, 0, 1, 1, 1, 1, 0, 0], [1.0, 0, 0, 1, 1, 1, 0, 1, 0], [1.0, 0, 0, 1, 1, 0, 1, 0, 1], [1.0, 0, 0, 1, 1, 0, 0, 1, 1], [1.0, 1, 0, 1, 0, 1, 0, 0, 1], [1.0, 1, 0, 1, 0, 0, 1, 1, 0], [1.0, 1, 0, 0, 1, 1, 0, 1, 0], [1.0, 1, 0, 0, 1, 1, 0, 0, 1], [1.0, 1, 0, 0, 1, 0, 1, 1, 0], [1.0, 1, 0, 0, 1, 0, 1, 0, 1], [1.0, 0, 1, 1, 0, 1, 0, 1, 0], [1.0, 0, 1, 1, 0, 1, 0, 0, 1], [1.0, 0, 1, 1, 0, 0, 1, 1, 0], [1.0, 0, 1, 1, 0, 0, 1, 0, 1], [1.0, 0, 1, 0, 1, 1, 0, 0, 1], [1.0, 0, 1, 0, 1, 0, 1, 1, 0]] 


rhf_coeffs = [np.float64(-0.17677669529663653), np.float64(-0.17677669529663637), np.float64(0.1767766952966365), np.float64(0.1767766952966363), np.float64(-0.17677669529663637), np.float64(0.3535533905932738), np.float64(0.17677669529663617), np.float64(0.1767766952966365), np.float64(0.35355339059327384), np.float64(-0.17677669529663628), np.float64(0.1767766952966363), np.float64(0.17677669529663617), np.float64(-0.17677669529663628), np.float64(-0.17677669529663612), np.float64(0.17677669529663756), np.float64(0.1767766952966373), np.float64(0.17677669529663756), np.float64(0.17677669529663767), np.float64(0.17677669529663748), np.float64(0.17677669529663764), np.float64(0.1767766952966373), np.float64(0.17677669529663748), np.float64(0.17677669529663723), np.float64(0.17677669529663734), np.float64(0.17677669529663761), np.float64(0.17677669529663734)]



h_matrix = np.array([[-8.75838280e-01, -3.36850984e-03, -8.77527666e-05,
        -3.36850984e-03],
       [-3.36850984e-03, -8.75838280e-01, -3.36850984e-03,
        -8.77527666e-05],
       [-8.77527666e-05, -3.36850984e-03, -8.75838280e-01,
        -3.36850984e-03],
       [-3.36850984e-03, -8.77527666e-05, -3.36850984e-03,
        -8.75838280e-01]])
g_matrix = np.array([[[[ 7.74650370e-01, -9.12181324e-04, -1.77947669e-05,
          -9.12181324e-04],
         [-9.12181324e-04,  1.51192722e-01,  3.49547522e-05,
           7.77042239e-06],
         [-1.77947669e-05,  3.49547522e-05,  1.06907504e-01,
           3.49547522e-05],
         [-9.12181324e-04,  7.77042239e-06,  3.49547522e-05,
           1.51192722e-01]],

        [[-9.12181324e-04,  1.05789279e-05,  5.87103649e-08,
           2.35428697e-06],
         [ 1.05789279e-05, -9.12181324e-04,  2.35428697e-06,
           5.87103649e-08],
         [ 5.87103649e-08,  2.35428697e-06,  3.49547522e-05,
           3.00230203e-07],
         [ 2.35428697e-06,  5.87103649e-08,  3.00230203e-07,
           3.49547522e-05]],

        [[-1.77947669e-05,  5.87103649e-08,  4.29505961e-09,
           5.87103649e-08],
         [ 5.87103649e-08,  7.77042239e-06,  5.87103649e-08,
           2.03672303e-09],
         [ 4.29505961e-09,  5.87103649e-08, -1.77947669e-05,
           5.87103649e-08],
         [ 5.87103649e-08,  2.03672303e-09,  5.87103649e-08,
           7.77042239e-06]],

        [[-9.12181324e-04,  2.35428697e-06,  5.87103649e-08,
           1.05789279e-05],
         [ 2.35428697e-06,  3.49547522e-05,  3.00230203e-07,
           5.87103649e-08],
         [ 5.87103649e-08,  3.00230203e-07,  3.49547522e-05,
           2.35428697e-06],
         [ 1.05789279e-05,  5.87103649e-08,  2.35428697e-06,
          -9.12181324e-04]]],


       [[[-9.12181324e-04,  1.05789279e-05,  5.87103649e-08,
           2.35428697e-06],
         [ 1.05789279e-05, -9.12181324e-04,  2.35428697e-06,
           5.87103649e-08],
         [ 5.87103649e-08,  2.35428697e-06,  3.49547522e-05,
           3.00230203e-07],
         [ 2.35428697e-06,  5.87103649e-08,  3.00230203e-07,
           3.49547522e-05]],

        [[ 1.51192722e-01, -9.12181324e-04,  7.77042239e-06,
           3.49547522e-05],
         [-9.12181324e-04,  7.74650370e-01, -9.12181324e-04,
          -1.77947669e-05],
         [ 7.77042239e-06, -9.12181324e-04,  1.51192722e-01,
           3.49547522e-05],
         [ 3.49547522e-05, -1.77947669e-05,  3.49547522e-05,
           1.06907504e-01]],

        [[ 3.49547522e-05,  2.35428697e-06,  5.87103649e-08,
           3.00230203e-07],
         [ 2.35428697e-06, -9.12181324e-04,  1.05789279e-05,
           5.87103649e-08],
         [ 5.87103649e-08,  1.05789279e-05, -9.12181324e-04,
           2.35428697e-06],
         [ 3.00230203e-07,  5.87103649e-08,  2.35428697e-06,
           3.49547522e-05]],

        [[ 7.77042239e-06,  5.87103649e-08,  2.03672303e-09,
           5.87103649e-08],
         [ 5.87103649e-08, -1.77947669e-05,  5.87103649e-08,
           4.29505961e-09],
         [ 2.03672303e-09,  5.87103649e-08,  7.77042239e-06,
           5.87103649e-08],
         [ 5.87103649e-08,  4.29505961e-09,  5.87103649e-08,
          -1.77947669e-05]]],


       [[[-1.77947669e-05,  5.87103649e-08,  4.29505961e-09,
           5.87103649e-08],
         [ 5.87103649e-08,  7.77042239e-06,  5.87103649e-08,
           2.03672303e-09],
         [ 4.29505961e-09,  5.87103649e-08, -1.77947669e-05,
           5.87103649e-08],
         [ 5.87103649e-08,  2.03672303e-09,  5.87103649e-08,
           7.77042239e-06]],

        [[ 3.49547522e-05,  2.35428697e-06,  5.87103649e-08,
           3.00230203e-07],
         [ 2.35428697e-06, -9.12181324e-04,  1.05789279e-05,
           5.87103649e-08],
         [ 5.87103649e-08,  1.05789279e-05, -9.12181324e-04,
           2.35428697e-06],
         [ 3.00230203e-07,  5.87103649e-08,  2.35428697e-06,
           3.49547522e-05]],

        [[ 1.06907504e-01,  3.49547522e-05, -1.77947669e-05,
           3.49547522e-05],
         [ 3.49547522e-05,  1.51192722e-01, -9.12181324e-04,
           7.77042239e-06],
         [-1.77947669e-05, -9.12181324e-04,  7.74650370e-01,
          -9.12181324e-04],
         [ 3.49547522e-05,  7.77042239e-06, -9.12181324e-04,
           1.51192722e-01]],

        [[ 3.49547522e-05,  3.00230203e-07,  5.87103649e-08,
           2.35428697e-06],
         [ 3.00230203e-07,  3.49547522e-05,  2.35428697e-06,
           5.87103649e-08],
         [ 5.87103649e-08,  2.35428697e-06, -9.12181324e-04,
           1.05789279e-05],
         [ 2.35428697e-06,  5.87103649e-08,  1.05789279e-05,
          -9.12181324e-04]]],


       [[[-9.12181324e-04,  2.35428697e-06,  5.87103649e-08,
           1.05789279e-05],
         [ 2.35428697e-06,  3.49547522e-05,  3.00230203e-07,
           5.87103649e-08],
         [ 5.87103649e-08,  3.00230203e-07,  3.49547522e-05,
           2.35428697e-06],
         [ 1.05789279e-05,  5.87103649e-08,  2.35428697e-06,
          -9.12181324e-04]],

        [[ 7.77042239e-06,  5.87103649e-08,  2.03672303e-09,
           5.87103649e-08],
         [ 5.87103649e-08, -1.77947669e-05,  5.87103649e-08,
           4.29505961e-09],
         [ 2.03672303e-09,  5.87103649e-08,  7.77042239e-06,
           5.87103649e-08],
         [ 5.87103649e-08,  4.29505961e-09,  5.87103649e-08,
          -1.77947669e-05]],

        [[ 3.49547522e-05,  3.00230203e-07,  5.87103649e-08,
           2.35428697e-06],
         [ 3.00230203e-07,  3.49547522e-05,  2.35428697e-06,
           5.87103649e-08],
         [ 5.87103649e-08,  2.35428697e-06, -9.12181324e-04,
           1.05789279e-05],
         [ 2.35428697e-06,  5.87103649e-08,  1.05789279e-05,
          -9.12181324e-04]],

        [[ 1.51192722e-01,  3.49547522e-05,  7.77042239e-06,
          -9.12181324e-04],
         [ 3.49547522e-05,  1.06907504e-01,  3.49547522e-05,
          -1.77947669e-05],
         [ 7.77042239e-06,  3.49547522e-05,  1.51192722e-01,
          -9.12181324e-04],
         [-9.12181324e-04, -1.77947669e-05, -9.12181324e-04,
           7.74650370e-01]]]])
energy_nuc = 0.8185938377890949
E1 = full_H(grp_dets,grp_coeffs,h_matrix,g_matrix) + energy_nuc
E2 = full_H(rhf_dets,rhf_coeffs,h_matrix,g_matrix) + energy_nuc
E3 = full_H(grp_dets,list(np.array(grp_coeffs)*-1),h_matrix,g_matrix) + energy_nuc
for i, (sub1, sub2) in enumerate(zip(grp_dets, rhf_dets)):
    if sub1 != sub2:
        print(f"Sublists at index {i} differ: {sub1} vs {sub2}")
print(grp_dets==rhf_dets)
print(len(grp_dets),len(rhf_dets))
print(E1)
print(E2)
print(E3)
